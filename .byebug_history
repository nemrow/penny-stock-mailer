q
symbols_array.zip(names_array)
q
doc.css('#screener-content td:nth-child(3) a.screener-link').map(&:text)
doc.css('#screener-content td:nth-child(3) a').map(&:text)
symbols_array.zip(names_array)
q
doc.css('#screener-content td:nth-child(3) a').map(&:text)
doc.css('td:nth-child(3) a').map(&:text)
doc.css('#screener-content table tbody tr:nth-child(2) td:nth-child(3) a').map(&:text)
doc.css('#screener-content table > tbody > tr:nth-child(2) > td:nth-child(3) > a').map(&:text)
doc.css('#screener-content > table > tbody > tr:nth-child(4) > td > table > tbody > tr:nth-child(2)').map(&:text)
doc.css('#screener-content > table > tbody > tr:nth-child(4) > td > table > tbody > tr:nth-child(2) > td:nth-child(3) > a').map(&:text)
doc.css('div#screener-content td a.screener-link').map(&:text)
doc.css('div#screener-content td.screener-body-table-nw a.screener-link').map(&:text)
doc.css('div#screener-content td a.screener-link').map(&:text)
symbols_array.zip(names_array)
q
doc.css('div#screener-content td a.screener-link').map(&:text)
doc.css('div#screener-content td a.screener-link-primary').map(&:text)
doc.css('div#screener-content td a.screener-link-primary')
q
all_symbols
ValidPennyStockGetter
q
stock_object_array[index].firebase_id
stock_object_array[index]
stock_json
stock_object_array[index]
stock_object_array
index
stock_json
q
symbols_string
stock_json_array.map{|i|i["symbol"]}
symbols_string
stock_json_array
symbols_string
q
firebase_object.body["name"]
firebase_object.body[:name]
firebase_object.body.name
firebase_object.body.na,e
firebase_object.name
firebase_object.body
firebase_object.body.id
firebase_object.body
firebase_object
q
Stock.count
Stock.destroy_all
firebas_object.id
firebas_object
firebas_object.body
self.symbol
firebas_object.body
firebas_object
firebas_object.id
firebas_object
self
quit
Stock.destroy_all
firebase_base_client.get("stock", {symbol: "AAMEE"}).body
firebase_base_client.get("stock", {symbol: "AAME"}).body
stock_client.get("stocks", {symbol: "AAME"}).body
stock_client.get("stock", {symbol: "AAME"}).body
stock_client.get({symbol: "AAME"}).body
firebase_base_client.get("stocks", {symbol: "AAME"}).body
firebase_base_client.get("stocks", {"symbol" => "AAME"}).body
firebase_base_client.get("stocks", {"symbol": "AAME"}).body
firebase_base_client.get("stocks", {symbol: "AAME"}).body
firebase_base_client.get("stocks", {symbol: "AA"}).body
q
firebase.get("stock", {symbol: ""}).body
firebase.get("stock", {symbol: "sdsss"}).body
chars = firebase.get("stock", {symbol: "sdsss"})
chars.body
chars
chars = firebase.get("stock", {symbol: "sds"})
firebase.get("stock", {symbol: "sds"})
firebase
q
stock_json
q
stock_json.first["symbol"]
stock_json.first
stock_json
q
stock_json
q
JSON.load(open(api_url(symbols_string)))["results"]
JSON.load(open(api_url(symbols_string)))["response"]
JSON.load(open(api_url(symbols_string)))
JSON.load(open(api_url(symbols_string))))
ar.concat([6,7,8])
ar.concat(')
ar = [1,2,3]
JSON.parse(JSON.load(open(api_url(symbols_string))).to_json)["results"]
q
JSON.parse(JSON.load(open(self.api_url(symbols_string))).to_json)["results"]
q
JSON.parse(JSON.load(open(api_url(symbols_string))).to_json)["results"]
q
JSON.parse(JSON.load(open(all_open_stocks_url)).to_json)["results"]
q
Stock.count
Stock.find_or_create_by(symbol: symbol)
Stock.count
Stock.find_or_create_by(symbol: symbol)
Stock.find_or_create(symbol: symbol)
Stock
symbol
quit
@floor_touch_count
q
stock_json.map{ |minute| minute["close"].to_d }.first
stock_json.map{ |minute| minute["close"].to_d }.first.to_f
stock_json.map{ |minute| minute["close"].to_d }.first
stock_json.map{ |minute| minute["close"].to_d }
stock_json.map{ |minute| minute["close"].to_i }
stock_json.map{ |minute| minute["close"].to_f }
stock_json.pluck("close")
stock_json.map(:close)
stock_json.map(":close)
stock_json.map("close")
stock_json.first['close']
stock_json
quit
stock_json.each{|i|puts i["timestamp"]}
q
stock_json.each{|i|puts i["timestamp"]}
q
stock_json.each{|i|puts i["timestamp"]}
stock_json.map{|i|i["timestamp"]}
stock_json
q
reload!@
reload!
all_open_stocks_json
c
all_open_stocks_url
q
all_open_stocks_url
c
all_open_stocks_url
c
q
Transaction.all_open
quit
open("http://ds01.ddfplus.com/historical/queryminutes.ashx?username=jordann&password=barchart&symbol=GOOG&order=desc")
open("http://ds01.ddfplus.com/historical/queryminutes.ashx?username=jordann&password=barchart&symbol=#{stock}&order=desc")
open(""http://ds01.ddfplus.com/historical/queryminutes.ashx?username=jordann&password=barchart&symbol=#{stock}&order=desc"")
stock_json
q
@stock_data["lastPrice"].to_f
@transaction.buy.to_f
@transaction.buy.to_f - 0.01
@stock_data["lastPrice"].to_f <= @transaction.buy.to_f - 0.01
@stock_data["lastPrice"].to_f >= @transaction.buy.to_f + 0.01
@transaction.buy.to_f
@transaction.buy.to_f + 0.01
@stock_data["lastPrice"].to_f
q
@stock_data["lastPrice"].to_f
@stock_data["lastPrice"]
@stock_data.lastPrice
@stock_data
@transaction.buy.to_f
@transaction.buy
@transaction
q
transaction
stock_data
q
json
josn
q
JSON.parse(json)
json
q
csv.read
csv
csv.read
csv
CSV.parse(csv)
CSV.parse(csv.read)
CSV.parse(csv.read).to_json
csv
CSV.parse(csv)
csv.each_line
csv.lines
csv.methods
csv.read_lines
csv
csv.to_json
CSV.parse(csv).to_json
CSV.parse(csv)
csv.read
csv
q
CSV
q
testy
q
testy
q
p all_open_stocks_json
pp all_open_stocks_json
p all_open_stocks_json
puts all_open_stocks_json
pp all_open_stocks_json
all_open_stocks_json
q
all_open_stocks_json
quit
transaction.stock
transaction
q
JSON.parse(@stockJSON)["results"]
JSON.parse(@stockJSON)[results""]
JSON.parse(@stockJSON)
@stockJSON
q
stocks.count
stocks
q
y
q
main_doc.css('a.screener-pages').last.text.to_i
main_doc.css('a.screener-pages').last.text
main_doc.css('a.screener-pages').last
main_doc.css('a.screener-pages')
q
stocks.count
stocks
stocls
q
new_page_link["href"]
new_page_link.link
new_page_link.href
new_page_link
c
new_page_link
q
doc.css('a.screener-pages')
q
stocks
stockls
q
stocks
q
series
insex
q
series
series[index]
